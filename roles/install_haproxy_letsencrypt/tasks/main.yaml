---
- name: Adding software-properties-common
  ansible.builtin.apt:
    pkg: software-properties-common
    install_recommends: false
    state: present

- name: Adding haproxy PPA
  ansible.builtin.apt_repository:
    repo: "ppa:vbernat/haproxy-2.4"
    validate_certs: false
    state: present

- name: Installing haproxy
  ansible.builtin.apt:
    name: "haproxy=2.4.*"
    state: present

- name: Create SSl cert folder
  ansible.builtin.file:
    path: /etc/ssl/{{ droplet_domain }}
    state: directory
    mode: "0755"
    recurse: true

- name: Preparing haproxy.cfg
  ansible.builtin.blockinfile:
    path: /etc/haproxy/haproxy.cfg
    block: "{{ lookup('template', './node/haproxy_letsencrypt.j2') }}"

- name: HAProxy start on boot
  ansible.builtin.shell: |
    systemctl enable haproxy
    systemctl restart haproxy
  args:
    executable: /bin/bash
  become: yes

- name: Getting certificate via certbot
  ansible.builtin.shell: |
    certbot certonly --standalone -d {{ droplet_domain }} --non-interactive --agree-tos --email {{ letsencrypt_email }} --http-01-port=8888
    cat /etc/letsencrypt/live/{{ droplet_domain }}/fullchain.pem /etc/letsencrypt/live/{{ droplet_domain }}/privkey.pem | sudo tee /etc/ssl/{{ droplet_domain }}/{{ droplet_domain }}.pem
  args:
    executable: /bin/bash
    chdir: /root

- name: Enabling SSL
  ansible.builtin.lineinfile:
    dest: /etc/haproxy/haproxy.cfg
    regexp: '^#\s*bind {{ droplet_ip | regex_escape }}:443.*$'
    line: "        bind {{ droplet_ip }}:443 ssl crt /etc/ssl/{{ droplet_domain }}/{{ droplet_domain }}.pem"
    backrefs: yes
  notify: ha-proxy-reload

- name: Enabling SSL redirect
  ansible.builtin.lineinfile:
    dest: /etc/haproxy/haproxy.cfg
    regexp: '^#\s*http-request redirect scheme https unless.*$'
    line: "        http-request redirect scheme https unless { ssl_fc }"
    backrefs: yes
  notify: ha-proxy-reload

- name: Create a script to copy updated SSL certificates
  ansible.builtin.template:
    src: ./node/ssl_update.j2
    dest: /usr/local/sbin/ssl_update.sh
    mode: u+rwx,g+rx,o-rwx
    become: yes

- name: Make the SSL update script executable
  ansible.builtin.file:
    dest: /usr/local/sbin/ssl_update.sh
    mode: a+x
    become: yes

- name: Schedule a cronjob for syncing SSL certificates after updates
  ansible.builtin.template:
    src: ./node/ssl_to_haproxy.j2
    dest: /etc/cron.d/ssl2haproxy
    mode: u+rw,g+r,o+r
    become: yes

- name: Display Idena post install msg
  debug: msg={{ post_install_msg.split('\n') }}
